version: '3.8'
services:
  nginx-backend:
    image: nginx
    container_name: karting-nginx-backend-container
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./backend.conf:/etc/nginx/nginx.conf
    networks:
      - karting-backend-network
    depends_on:
      - spring1
      - spring2
      - spring3

  nginx-frontend:
    image: nginx
    container_name: karting-nginx-frontend-container
    restart: always
    ports:
      - "8070:8070"
    volumes:
      - ./frontend.conf:/etc/nginx/nginx.conf
    networks:
      - karting-frontend-network
    depends_on:
      - react1
      - react2
      - react3

  postgres:
    container_name: karting-postgres-container
    image: postgres
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - karting-postgres-volume:/var/lib/postgresql/data
    networks:
      - karting-backend-network
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432

  spring1:
    container_name: karting-backend-container1
    image: calpz/karting-backend-image
    ports:
      - 8091:8090
    environment:
      DB_HOST: karting-postgres-container
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    networks:
      - karting-backend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres

  spring2:
    container_name: karting-backend-container2
    image: calpz/karting-backend-image
    ports:
      - 8092:8090
    environment:
      DB_HOST: karting-postgres-container
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres

    networks:
      - karting-backend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres  

  spring3:
    container_name: karting-backend-container3
    image: calpz/karting-backend-image
    ports:
      - 8093:8090
    environment:
      DB_HOST: karting-postgres-container
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres

    networks:
      - karting-backend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres

  react1:
    container_name: karting-frontend-container1
    image: calpz/karting-frontend-image
    ports:
      - 3001:3000
    networks:
      - karting-frontend-network
    deploy:
      restart_policy:
        condition: on-failure

  react2:
    container_name: karting-frontend-container2
    image: calpz/karting-frontend-image
    ports:
      - 3002:3000
    networks:
      - karting-frontend-network
    deploy:
      restart_policy:
        condition: on-failure

  react3:
    container_name: karting-frontend-container3
    image: calpz/karting-frontend-image
    ports:
      - 3003:3000
    networks:
      - karting-frontend-network
    deploy:
      restart_policy:
        condition: on-failure

volumes:
  karting-postgres-volume:

networks:
  karting-backend-network:
  karting-frontend-network: